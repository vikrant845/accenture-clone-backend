{"version":3,"sources":["../src/internal/incompat-node-guard.ts"],"sourcesContent":["export function incompatibleNodeGuard() {\n  if (typeof process === \"undefined\") return;\n\n  let major: number | undefined;\n  let minor: number | undefined;\n\n  const maybeNodeVersion = process.versions?.node?.split(\".\");\n  if (maybeNodeVersion) {\n    [major, minor] = maybeNodeVersion.map((v) => parseInt(v, 10));\n  }\n\n  const maybeNodePath = process.env?.NODE;\n  if (!major && maybeNodePath) {\n    const nodeVersion = /v(\\d+)\\.(\\d+)\\.(\\d+)/.exec(maybeNodePath)?.[0];\n    if (nodeVersion) {\n      [major, minor] = nodeVersion\n        .substring(1)\n        .split(\".\")\n        .map((v) => parseInt(v, 10));\n    }\n  }\n\n  if (!major || !minor) return;\n\n  // Require ^18.13.0\n  if (major > 18) return;\n  if (major === 18 && minor >= 13) return;\n\n  console.error(\n    `[UT]: YOU ARE USING A LEGACY (${major}.${minor}) NODE VERSION WHICH ISN'T OFFICIALLY SUPPORTED. PLEASE UPGRADE TO NODE ^18.13.`,\n  );\n  process.exit(1); // Kill the process if it isn't going to work correctly anyway\n}\n"],"mappings":";AAAO,SAAS,wBAAwB;AAAxC;AACE,MAAI,OAAO,YAAY;AAAa;AAEpC,MAAI;AACJ,MAAI;AAEJ,QAAM,oBAAmB,mBAAQ,aAAR,mBAAkB,SAAlB,mBAAwB,MAAM;AACvD,MAAI,kBAAkB;AACpB,KAAC,OAAO,KAAK,IAAI,iBAAiB,IAAI,CAAC,MAAM,SAAS,GAAG,EAAE,CAAC;AAAA,EAC9D;AAEA,QAAM,iBAAgB,aAAQ,QAAR,mBAAa;AACnC,MAAI,CAAC,SAAS,eAAe;AAC3B,UAAM,eAAc,4BAAuB,KAAK,aAAa,MAAzC,mBAA6C;AACjE,QAAI,aAAa;AACf,OAAC,OAAO,KAAK,IAAI,YACd,UAAU,CAAC,EACX,MAAM,GAAG,EACT,IAAI,CAAC,MAAM,SAAS,GAAG,EAAE,CAAC;AAAA,IAC/B;AAAA,EACF;AAEA,MAAI,CAAC,SAAS,CAAC;AAAO;AAGtB,MAAI,QAAQ;AAAI;AAChB,MAAI,UAAU,MAAM,SAAS;AAAI;AAEjC,UAAQ;AAAA,IACN,iCAAiC,SAAS;AAAA,EAC5C;AACA,UAAQ,KAAK,CAAC;AAChB;","names":[]}
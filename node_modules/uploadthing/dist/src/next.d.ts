import type { NextRequest } from "next/server";
import type { Json } from "@uploadthing/shared";
import type { RouterWithConfig } from "./internal/handler";
import type { CreateBuilderOptions } from "./internal/upload-builder";
import type { FileRouter } from "./server";
export type { FileRouter } from "./internal/types";
export declare const createUploadthing: <TErrorShape extends Json>(opts?: CreateBuilderOptions<TErrorShape> | undefined) => (input: import("@uploadthing/shared").FileRouterInputConfig) => import("./server").UploadBuilder<{
    _input: "unsetMarker" & {
        __brand: "unsetMarker";
    };
    _metadata: "unsetMarker" & {
        __brand: "unsetMarker";
    };
    _middlewareArgs: {
        req: NextRequest;
        res: undefined;
        event: undefined;
    };
    _errorShape: TErrorShape;
    _errorFn: "unsetMarker" & {
        __brand: "unsetMarker";
    };
    _output: "unsetMarker" & {
        __brand: "unsetMarker";
    };
}>;
export declare const createNextRouteHandler: <TRouter extends FileRouter>(opts: RouterWithConfig<TRouter>) => {
    POST: (req: NextRequest) => Promise<Response>;
    GET: (req: NextRequest) => Promise<Response>;
};
//# sourceMappingURL=next.d.ts.map
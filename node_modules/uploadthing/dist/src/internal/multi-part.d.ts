import type { ContentDisposition, FetchEsque } from "@uploadthing/shared";
/**
 * Used by server uploads where progress is not needed.
 * Uses normal fetch API.
 */
export declare function uploadPart(opts: {
    fetch: FetchEsque;
    url: string;
    key: string;
    chunk: Blob;
    contentType: string;
    contentDisposition: ContentDisposition;
    fileName: string;
    maxRetries: number;
    utRequestHeaders: Record<string, string>;
}, retryCount?: number): Promise<string>;
/**
 * Used by client uploads where progress is needed.
 * Uses XMLHttpRequest.
 */
export declare function uploadPartWithProgress(opts: {
    url: string;
    chunk: Blob;
    fileType: string;
    fileName: string;
    contentDisposition: ContentDisposition;
    maxRetries: number;
    onProgress: (progressDelta: number) => void;
}, retryCount?: number): Promise<string>;
//# sourceMappingURL=multi-part.d.ts.map
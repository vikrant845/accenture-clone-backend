import type { CSSProperties, ReactNode } from "react";
import type { JSX } from "solid-js/jsx-runtime";
import type { ExpandedRouteConfig } from "@uploadthing/shared";
/**
 * Shared helpers for our premade components that's reusable by multiple frameworks
 */
export declare const generatePermittedFileTypes: (config?: ExpandedRouteConfig) => {
    fileTypes: import("@uploadthing/shared").FileRouterInputKey[];
    multiple: boolean;
};
export declare const capitalizeStart: (str: string) => string;
export declare const INTERNAL_doFormatting: (config?: ExpandedRouteConfig) => string;
export declare const allowedContentTextLabelGenerator: (config?: ExpandedRouteConfig) => string;
type AnyRuntime = "react" | "solid";
type MinCallbackArg = {
    __runtime: AnyRuntime;
};
type inferRuntime<T extends MinCallbackArg> = T["__runtime"] extends "react" ? "react" : "solid";
type ElementEsque<TRuntime extends AnyRuntime> = TRuntime extends "react" ? ReactNode : JSX.Element;
type CSSPropertiesEsque<TRuntime extends AnyRuntime> = TRuntime extends "react" ? CSSProperties : JSX.CSSProperties;
export type StyleField<CallbackArg extends MinCallbackArg, TRuntime extends AnyRuntime = inferRuntime<CallbackArg>> = string | CSSPropertiesEsque<TRuntime> | ((arg: Omit<CallbackArg, "__runtime">) => string | CSSPropertiesEsque<TRuntime>);
export type ContentField<CallbackArg extends MinCallbackArg, TRuntime extends AnyRuntime = inferRuntime<CallbackArg>> = ElementEsque<TRuntime> | ((arg: Omit<CallbackArg, "__runtime">) => ElementEsque<TRuntime>);
export declare const styleFieldToClassName: <T extends MinCallbackArg>(styleField: StyleField<T, inferRuntime<T>> | undefined, args: T) => string;
export declare const styleFieldToCssObject: <T extends MinCallbackArg>(styleField: StyleField<T, inferRuntime<T>> | undefined, args: T) => CSSPropertiesEsque<inferRuntime<T>>;
export declare const contentFieldToContent: <T extends MinCallbackArg>(contentField: ContentField<T, inferRuntime<T>> | undefined, arg: T) => ElementEsque<inferRuntime<T>> | null | undefined;
export {};
//# sourceMappingURL=component-theming.d.ts.map